!---------------------------------------------------------------------------  
!
! DESCRIPTION
!> define basic types for future use
!
!---------------------------------------------------------------------------  
module type_define
implicit none




!---------------------------------------------------------------------------  
!> each molecule 
!---------------------------------------------------------------------------  
type :: molecule
   integer              :: id, type, pos(3)
   integer, allocatable :: states(:) 
end type molecule

!---------------------------------------------------------------------------  
!> Global variables 
!---------------------------------------------------------------------------  

type (molecule),  allocatable :: mlist (:) ! molecule list

!---------------------------------------------------------------------------  
! this one should be local (handled automatically)
!---------------------------------------------------------------------------
! type (reaction), pointer :: curr_react

contains



!---------------------------------------------------------------------------  
! DESCRIPTION
!> @brief initialize molecule list (mlist)
!---------------------------------------------------------------------------  
subroutine init_mlist()
  integer :: n, t, s, i, status
  ! !---------------------------------
  ! !> calculate total number of molecules
  ! n = 0
  ! do t = 1, size(tlist)
  !    n = n + tlist(t) % ptr % eva_num
  ! end do
  ! !---------------------------------
  ! !> allocate list
  ! allocate (mlist (n), STAT = status)
  ! if (status /= 0) stop "ERROR: Not enough memory!"
  ! !---------------------------------
  ! !> initialize molecule
  ! t = 0 !> molecule type index
  ! s = 0 !> index sum
  ! do i = 1, n
  !    !> find current molecule type
  !    if (i > s) then        
  !       t = t + 1
  !       tlist(t) % ptr % idx_offset = s  !> set index offset for molecule
  !       s = s + tlist(t) % ptr % eva_num !> set next index counter
  !       !> debug check result
  !       print *, "initalized type", t, "=>", tlist(t) % ptr % idx_def
  !    end if
  !    !> allocate state number
  !    allocate (mlist(i) % states (tlist(t) % ptr % dot_num), STAT = status)
  !    if (status /= 0) stop "ERROR: Not enough memory!"
  !    !> set molecule properties
  !    mlist(i) % id     = i
  !    mlist(i) % pos    = 0
  !    mlist(i) % type   = t
  !    mlist(i) % states = 0
  ! end do
  return
end subroutine init_mlist

end module type_define
